g  = 2
g2 = 20
for i in 1:2
    l1 = g2                                       # l1: local, g2: global (read only)
    l1 += i
    g = i                                         # REPL/INTERACTIVE: global (from Julia 1.5), FILE MODE: local by default (with a warning `g` being already defined)
    g += i                                       
    println("i: $i")
    println("l1: $l1")
    println("g: $g")
    for j in 1:2
        l1 += j                                   # still the local in outer loop, not a new local one 
        l2 = j
        g  += j
        println("j: $j")
        println("l1 inside inner loop: $l1")
        println("l2 inside inner loop: $l2")
        println("g inside inner loop: $g")
    end
    # println("l2 post: $l2")                     # error: l2 not defined in this scope 
    println("l1 post: $l1")
    println("g post: $g")
end
# println("l1 global $l1")                        # error; l1 is not defined in the global scope
println("g in global: $g")                        # REPL/INTERACTIVE: "7", FILE MODE: "2"

function foo(i)
    l1 = g2                                       # l1: local, g2: global (read only)
    l1 += i
    g = i                                         # REPL/INTERACTIVE and FILE MODE: local by default (with a warning `g` being already defined)
    g += i                                       
    println("i: $i")
    println("l1: $l1")
    println("g: $g")
    for j in 1:2
        l1 += j                                   # still the local in outer loop, not a new local one 
        l2 = j
        g  += j
        println("j: $j")
        println("l1 inside inner loop: $l1")
        println("l2 inside inner loop: $l2")
        println("g inside inner loop: $g")
    end
    # println("l2 post: $l2")                     # error: l2 not defined in this scope 
    println("l1 post: $l1")
    println("g post: $g")
end

println("Calling foo..")
foo(10)
println("g in global: $g")                        # REPL/INTERACTIVE: "7", FILE MODE: "2"
